<!DOCTYPE html>
<html>

<head>
    <title>BootStrap</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-4Q6Gf2aSP4eDXB8Miphtr37CMZZQ5oXLH2yaXMJ2w8e2ZtHTl7GptT4jmndRuHDT" crossorigin="anonymous">
</head>

<body>
    <div class="container bg-primary-subtle text-center p-1">
        <h1>Grid System in BootStrap</h1>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md bg-info-subtle">Open source</div>
            <div class="col-md bg-danger-subtle">Responsive</div>
            <div class="col-md bg-success-subtle">User-Friendly</div>
        </div>
    
        <div class="container bg-info-subtle">
            <h2>Grig System</h2>
            <p>The grid system is a powerful layout tool in CSS that lets you organize content using rows and columns, much like a
            sketchpad or a table. It allows web developers and designers to create structured, balanced designs where elements are
            placed with accuracy and control. Introduced in CSS Grid Layout, this system offers a native way to design complex
            layouts without external frameworks. It works directly with HTML and CSS, giving you complete flexibility over the
            structure of your web page.</p>
            <div class="row">
                <div class="col-md-4 col-md-9 col-sm-4 bg-success-subtle">To create a grid, you define a grid container using display: grid; in your CSS. Inside this container, child elements
                (called grid items) are automatically placed in a grid layout. You can define the number of columns and rows using
                properties like grid-template-columns and grid-template-rows. The layout can be customized further using gaps,
                alignment, auto-placement, and grid areas, allowing you to control exactly where and how items appear. Grid items can
                span across multiple columns or rows, and the entire layout can adjust to different screen sizes using media queries or
                responsive units like fr and %.</div>
                <div class="col-md-8 col-md-3 col-sm-8 bg-danger-subtle">
                    CSS Grid is incredibly useful for creating responsive, clean, and scalable web layouts. Unlike older layout techniques
                    like floats or Flexbox (which is one-dimensional), Grid works in two dimensions — both rows and columns — giving you
                    more layout power. It’s perfect for designing photo galleries, blog layouts, dashboards, product listings, and any
                    design that needs precise alignment. It also makes your code cleaner and easier to maintain, reducing the need for
                    complicated nesting or extra wrappers. As a modern standard, CSS Grid is widely supported in all major browsers and is
                    considered an essential skill for today’s front-end developers and designers.
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-j1CDi7MgGQ12Z7Qab0qlWQ/Qqz24Gc6BM0thvEMVjHnfYGF0rmFCozFSxQBxwHKO"
        crossorigin="anonymous"></script>
</body>

</html>